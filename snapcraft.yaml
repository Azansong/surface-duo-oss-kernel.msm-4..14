name: dragonboard-kernel
version: null
version-script: |
    . debian/debian.env
    VERSION=$(dpkg-parsechangelog -l $DEBIAN/changelog -S version)-fit-fde
    if [ -d "$KEYS" ] ; then \
       echo ${VERSION}; \
    else \
       echo ${VERSION}-open; \
    fi
summary: The Canonical snapdragon arm64 kernel
description: The Canonical snapdragon arm64 kernel
grade: stable
confinement: strict
type: kernel

parts:
  kernel:
    plugin: kernel
    source: .
    source-type: git
    kconfigflavour: snapdragon
    kconfigs:
      - CONFIG_DEBUG_INFO=n
    kernel-initrd-modules:
      - dm-crypt
    build-packages:
      - kmod
    kernel-image-target: Image
    override-build: |
      snapcraftctl build
      cp $SNAPCRAFT_PART_INSTALL/dtbs/qcom/apq8016-sbc-snappy.dtb $SNAPCRAFT_PART_INSTALL/dtbs/qcom/apq8016-sbc.dtb
      cp $SNAPCRAFT_PART_INSTALL/dtbs/qcom/*.dtb $SNAPCRAFT_PART_INSTALL/dtbs/
    organize:
      kernel.img: Image-4.4
      initrd.img: initrd
    prime:
      - -initrd*
      - -Image-4.4
    after:
      - firmware
      - u-boot-tools
  firmware:
    plugin: nil
    source: firmware
    stage-packages:
      - on arm64:
        - linux-firmware
        - linux-firmware-snapdragon
      - else:
        - linux-firmware
        - linux-firmware-snapdragon:arm64
    organize:
      lib/firmware: firmware
    prime:
      - -usr
      - -lib
    override-build: |
      mkdir -p $SNAPCRAFT_PART_INSTALL/firmware/wlan
      ln -s /run/macaddr0 $SNAPCRAFT_PART_INSTALL/firmware/wlan/
    build-packages:
      - cpio
      - libssl-dev
      - dpkg-dev
  fit-image:
    plugin: nil
    source: fit-image
    after:
      - initrd
      - kernel
    override-build: |
      cp $SNAPCRAFT_STAGE/Image-4.4* .
      cp $SNAPCRAFT_STAGE/initrd.img .
      cp -r $SNAPCRAFT_STAGE/dtbs .
      if [ -d "$KEYS" ] ; then \
        $SNAPCRAFT_STAGE/mkimage -D "-I dts -O dtb -p 2000" -f kernel.its -k $KEYS -K dragonboard410c.dtb -r $SNAPCRAFT_PART_INSTALL/kernel.img; \
      else \
        $SNAPCRAFT_STAGE/mkimage -D "-I dts -O dtb -p 2000" -f kernel.its -r $SNAPCRAFT_PART_INSTALL/kernel.img; \
      fi
      cp kernel.its $SNAPCRAFT_PART_INSTALL/kernel.its
      cp dragonboard410c.dtb $SNAPCRAFT_PART_INSTALL/
  u-boot-tools:
    plugin: nil
    source: git://git.denx.de/u-boot.git
    source-tag: v2017.11
    build-packages:
      - device-tree-compiler
      - libssl-dev
    override-build: |
      make dragonboard410c_defconfig
      echo "CONFIG_CMD_MD5SUM=y\nCONFIG_SYS_NO_FLASH=y\nCONFIG_FIT=y\nCONFIG_FIT_SIGNATURE=y\nCONFIG_RSA=y\nCONFIG_FIT_VERBOSE=y \
               \nCONFIG_FIT_ENABLE_SHA256_SUPPORT=y\n# CONFIG_SPL_RSA is not set\n# CONFIG_SPL_LOAD_FIT is not set \
               \n# CONFIG_FIT_BEST_MATCH is not set\nCONFIG_RSA_SOFTWARE_EXP=y" \
         >> .config
      make tools-only
      cp tools/mkimage $SNAPCRAFT_PART_INSTALL
    prime:
      - -mkimage
  initrd:
    plugin: nil
    source: initrd
    stage-packages:
      - on arm64:
        - cryptsetup-bin
        - e2fsprogs
        - rsync
        - libcryptsetup4
        - libgcrypt20
        - libgpg-error0
        - dmsetup
        - libdevmapper1.02.1
        - jq
        - libonig2
      - else:
        - cryptsetup-bin:arm64
        - e2fsprogs:arm64
        - rsync:arm64
        - libcryptsetup4:arm64
        - libgcrypt20:arm64
        - libgpg-error0:arm64
        - dmsetup:arm64
        - libdevmapper1.02.1:arm64
        - jq:arm64
        - libonig2:arm64
    prime:
      - -etc
      - -lib
      - -sbin
      - -usr
      - -var
    after:
      - kernel
      - initrd-patch
    override-build: |
      echo "Cleaning staged packages first in install"
      for d in lib/x86_64-linux-gnu lib/systemd etc usr/share usr/lib/gcc var; do \
          [ -e $SNAPCRAFT_PART_INSTALL/${d} ] && rm -rf $SNAPCRAFT_PART_INSTALL/${d}; \
      done
      find  $SNAPCRAFT_PART_INSTALL/lib/ ! -name "libcryptsetup.so.*" ! -name "libgcrypt.so.*" ! -name "libgpg-error.so.*" ! -name "libdevmapper.so.*" ! -name "*.rules" \( -type f -o -type l \) -exec rm -v {} \;
      find  $SNAPCRAFT_PART_INSTALL/usr/lib ! -name "libonig.so.*" \( -type f -o -type l \) -exec rm -v {} \;
      cp -ran $SNAPCRAFT_PART_INSTALL/* initrd
      cd initrd; find . | cpio --quiet -o -H newc | lzma -7 > ../initrd.img
      cat $SNAPCRAFT_STAGE/initrd-patched.img ../initrd.img > $SNAPCRAFT_PART_INSTALL/initrd.img

  initrd-patch:
    plugin: nil
    source: initrd
    after:
      - kernel
    override-build: |
      echo "Patching upstream initrd to enable console over serial"
      rm -rf initrd; mkdir initrd; cd initrd
      zcat $SNAPCRAFT_STAGE/initrd | cpio -idmv
      sed -i 's#/dev/console#/dev/ttyMSM0#g' scripts/functions
      find . | cpio --quiet -o -H newc | lzma -7 > $SNAPCRAFT_PART_INSTALL/initrd-patched.img
    prime:
      - -initrd-patched.img
