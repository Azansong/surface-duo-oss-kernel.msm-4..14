name: imx-kernel
summary: The Ubuntu iMX Linux kernel
description: This Ubuntu Linux kernel for NXP iMX family of devices

grade: stable
confinement: strict
type: kernel
adopt-info: kernel

build-base: core18

architectures:
  - build-on: amd64
    run-on: armhf, arm64
  - build-on: armhf
    run-on: armhf
  - build-on: arm64
    run-on: arm64

parts:
    kernel:
        after:
            - qcacld
            - optee-fde
        plugin: kernel
        source: .
        kdefconfig: [ "snappy_defconfig" ]
        kernel-with-firmware: false
        kernel-image-target: Image
        kernel-initrd-core-base: core20
        kernel-initrd-flavour: edge
        kernel-initrd-compression: gz
        kernel-initrd-addons:
            - usr/bin/fde-reveal-key
            - usr/lib/libteec.so*
        override-build: |
            snapcraftctl build
            mkdir -p ${SNAPCRAFT_PART_INSTALL}/lib
            ln -sf ../modules ${SNAPCRAFT_PART_INSTALL}/lib/modules
            snapcraftctl set-version $(git describe --tags | cut -c 12-42)
            # build out of the tree qca9377 driver
            cp -r ${SNAPCRAFT_STAGE}/qcacld .
            cd ${SNAPCRAFT_PART_BUILD}/qcacld
            make_module() {
              make -j $(nproc) \
                 ARCH=arm64 CROSS_COMPILE=aarch64-linux-gnu- \
                 KERNEL_SRC=${SNAPCRAFT_PART_SRC} \
                 CONFIG_CFG80211_INTERNAL_REGDB=y CONFIG_HDD_WLAN_WAIT_TIME=10000 \
                 CONFIG_LINUX_QCMBR=y CONFIG_NON_QC_PLATFORM=y CONFIG_PMF_SUPPORT=y \
                 TARGET_BUILD_VARIANT=user CONFIG_CLD_HL_SDIO_CORE=y \
                 CONFIG_FEATURE_COEX_PTA_CONFIG_ENABLE=y CONFIG_PER_VDEV_TX_DESC_POOL=1 \
                 CONFIG_QCA_LL_TX_FLOW_CT=1 CONFIG_QCA_SUPPORT_TXRX_DRIVER_TCP_DEL_ACK=y \
                 CONFIG_WLAN_FEATURE_FILS=y CONFIG_WLAN_WAPI_MODE_11AC_DISABLE=y \
                 MODNAME=qca9377 SAP_AUTH_OFFLOAD=1 \
                 KERNEL_PATH=${SNAPCRAFT_PART_SRC} \
                 O=${SNAPCRAFT_PART_BUILD} \
                 KBUILD_EXTRA_SYMBOLS="" "$@"
            }
            make_module
            make_module INSTALL_MOD_STRIP=1 INSTALL_MOD_PATH=${SNAPCRAFT_PART_INSTALL} modules_install
        organize:
            kernel.img: Image
        stage:
            - System.map-*
            - config-*
            - dtbs
            - initrd.img
            - kernel.img
            - lib
            - modules
            - -modules/*/build
            - -modules/*/source

    qcacld:
        plugin: dump
        source: https://source.codeaurora.org/external/imx/qcacld-2.0-imx
        source-type: git
        source-tag: rel_imx_5.4.70_2.3.0
        source-depth: 1
        organize:
           '*': qcacld/
        prime:
            - -*

    firmware:
        plugin: nil
        stage-packages:
            - linux-firmware
            - wireless-regdb
        override-build: |
            snapcraftctl build
            mkdir -p ${SNAPCRAFT_PART_INSTALL}/lib
            ln -fs ../firmware ${SNAPCRAFT_PART_INSTALL}/lib/firmware
        stage:
            - -firmware/amd
            - -firmware/amdgpu
            - -firmware/cavium
            - -firmware/dpaa2
            - -firmware/i915
            - -firmware/intel
            - -firmware/iwlwifi-*
            - -firmware/liquidio
            - -firmware/matrox
            - -firmware/mediatek
            - -firmware/mellanox
            - -firmware/mrvl
            - -firmware/netronome
            - -firmware/nvidia
            - -firmware/qed
            - -firmware/radeon
            - -firmware/rockchip
            - -firmware/qcom
            - -firmware/qca
            - -firmware/brcm/brcmfmac43455-sdio.bin
            - -firmware/brcm/brcmfmac4356-pcie.bin
        organize:
            lib/firmware: firmware
        prime:
            - -usr
            - -lib

    firmware-nxp:
        plugin: dump
        source: git@github.com:NXP/imx-firmware.git
        source-type: git
        source-tag: rel_imx_5.4.70_2.3.0
        organize:
            'cyw-wifi-bt/1CX_CYW4356/*': firmware/brcm/
            'cyw-wifi-bt/1FD_CYW4359/*': firmware/brcm/
            'cyw-wifi-bt/1MW_CYW43455/*': firmware/brcm/
            'brcm/': firmware/brcm/
            'nxp/FwImage_8997/*': firmware/nxp/
            'nxp/FwImage_8987/*': firmware/nxp/
            'nxp/wifi_mod_para.conf': firmware/nxp/
        stage:
            - firmware/brcm
            - firmware/nxp

    firmware-qca:
        plugin: nil
        override-pull: |
            wget https://www.nxp.com/lgfiles/NMG/MAD/YOCTO/firmware-qca-3.0.2.bin \
                 -O firmware-qca.bin
        override-build: |
            chmod +x firmware-qca.bin
            ./firmware-qca.bin --force --auto-accept
            cp -r firmware-*/1PJ_QCA9377-3_LEA_3.0/lib/firmware ${SNAPCRAFT_PART_INSTALL}

    optee-os:
        plugin: dump
        source: https://github.com/OP-TEE/optee_os.git
        source-type: git
        source-tag: 3.10.0
        override-build: |
            # we are building optee-os only to get build export dependency to build REE app
            # so precise configs are esential
            if [ "${SNAP_ARCH}" != "arm64" ]; then
                echo "Cross building for arm64"
                export CROSS_COMPILE="aarch64-linux-gnu-"
                export CROSS_COMPILE_core="aarch64-linux-gnu-"
                export CROSS_COMPILE_ta_arm64="aarch64-linux-gnu-"
            fi
            export ARCH=arm
            export DEBUG=0 \
            export CFG_TEE_CORE_LOG_LEVEL=1 \
            export CFG_TEE_TA_LOG_LEVEL=1 \
            export CFG_TEE_BENCHMARK=n
            export CFG_ARM64_core=y
            export CFG_USER_TA_TARGETS="ta_arm64"
            export PLATFORM="vexpress-qemu_armv8a"
            make O=${SNAPCRAFT_PART_BUILD}/out -j$(nproc)
            cp -r out/export-ta_arm64 ${SNAPCRAFT_PART_INSTALL}
        prime:
            - -*

    optee-client:
        plugin: dump
        source: https://github.com/OP-TEE/optee_client.git
        source-type: git
        source-tag: 3.10.0
        override-build: |
            if [ "${SNAP_ARCH}" != "arm64" ]; then
                echo "Cross building for arm64"
                export CROSS_COMPILE="aarch64-linux-gnu-"
            fi
            export ARCH="arm64"
            export CFG_TA_TEST_PATH=0
            export CFG_TEE_SUPP_LOG_LEVEL=0
            export DESTDIR="${SNAPCRAFT_PART_INSTALL}"
            export CFG_TEE_CLIENT_LOAD_PATH=""
            make install -j$(nproc)
        prime:
            - usr/lib/lib*so*

    optee-fde:
        after:
            - optee-os
            - optee-client
        plugin: nil
        source: git+ssh://git.launchpad.net/~ondrak/+git/optee-uc-fde
        source-type: git
        source-branch: v1
        override-build: |
            # we are not using TA build here (early TA is used), so
            # it does not matter what key is used to sign built TA
            # support cross build
            if [ "${SNAP_ARCH}" != "arm64" ]; then
                echo "Cross building for arm64"
                export CROSS_COMPILE="aarch64-linux-gnu-"
            fi
            export ARCH="arm64"
            export TA_DEV_KIT_DIR="${SNAPCRAFT_STAGE}/export-ta_arm64"
            export CFG_TEE_CLIENT_LOG_LEVEL="1"
            export OPTEE_CLIENT_EXPORT="${SNAPCRAFT_STAGE}/usr"
            export DESTDIR=${SNAPCRAFT_PART_INSTALL}
            export O="${SNAPCRAFT_PART_BUILD}/out"
            make -j$(nproc)
            make install
        organize:
            usr/bin/fde-setup: meta/hooks/fde-setup
        stage:
            - meta/
            - usr/bin/fde-reveal-key
        prime:
            - meta/

build-packages:
    - dpkg-dev
    - u-boot-tools
    - libssl-dev
    - libfdt-dev
    - flex
    - bison
    - initramfs-tools-core
    - wget
    - libjson-c-dev:arm64
