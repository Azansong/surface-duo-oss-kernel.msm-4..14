#!/bin/sh -e
# Creates a Android boot.img image
# $1: kernel version
# $2: kernel modules directory
# $3: destination directory

. debian/debian.env

echo "Creating Android boot.img image"
KERNEL_VERSION="$1"
KERNEL_MODULES_D="$2"
dest_d="$3"

avb_cmdline="console=tty0 console=ttyMSM0,115200n8 panic=-1 clk_ignore_unused pd_ignore_unused snapd_lk_boot_disk=sde androidboot.hardware=qcom androidboot.memcg=1 video=vfb:640x400,bpp=32,memsize=3072000 androidboot.usbcontroller=a600000.dwc3 firmware_class.path=/lib/firmware/ initcall_blacklist=kgsl_3d_init,_kgsl_3d_init,__kgsl_3d_init,lpm_levels_module_init module_blacklist=msm_adreno,msm_kgsl_core"

set -x
avb_d=$dest_d
mkdir -p "$avb_d"
# Export variables to be used by hooks
export KERNEL_VERSION
export KERNEL_MODULES_D
cp -a "$KERNEL_MODULES_D" "$avb_d"/modules
/sbin/depmod -b "$avb_d"/modules "$KERNEL_VERSION"
export PATH="$PATH:/sbin"
initrd_f=initrd.img
cd "$avb_d"
ubuntu-core-initramfs create-initrd --output "$initrd_f" \
	--kerneldir "$avb_d"/modules/lib/modules \
	--kernelver "$KERNEL_VERSION"
mv "$initrd_f-$KERNEL_VERSION" "$initrd_f"
cd -
rm -rf "$avb_d"/modules

mkdir -p "$avb_d"/dtbs/
for dtb in $dtb_files; do
    cp -f "$dtb" "$avb_d"/dtbs/
done

cp -f "$dest_d"/vmlinuz-* "$avb_d"/Image-dtb

cd "$avb_d"
mkbootimg \
    --kernel Image-dtb \
    --ramdisk initrd.img \
    --output boot-"$KERNEL_VERSION".avb \
    --pagesize 4096 \
    --base 0x80000000 \
    --kernel_offset 0x8000 \
    --ramdisk_offset 0x1000000 \
    --tags_offset 0x100 \
    --cmdline "$avb_cmdline"
cd -

rm -rf "$avb_d"/"$initrd_f" "$avb_d"/Image-dtb
